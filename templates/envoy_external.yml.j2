{% set DEFAULT_ALLOW_HEADERS = 'keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,Authorization' %}
{% set DEFAULT_ALLOW_METHODS = 'GET, PUT, DELETE, POST, OPTIONS' %}
---
# --------------------------------

admin:
{# access_log_path: /tmp/admin_access.log #}
  address:
    socket_address:
      address: 0.0.0.0
      port_value: {{ envoy_admin_port }}

static_resources:
  listeners:
{% for listener in envoy_listeners %}
{%		if listener.add_redirect | default(false) %}
{%			include "include/redirect.yml.j2" %}
{%		endif %}
#
  - name: listener_{{ listener.name }}
    address:
      socket_address:
        address: 0.0.0.0
        port_value: {{ listener.port }}
{%		if listener.keepalive | default(false) %}
    socket_options:
    - {level: 1, name: 9, int_value: 1, state: STATE_LISTENING }     # 1=SOL_SOCKET,  9=SO_KEEPALIVE
    - {level: 6, name: 4, int_value: 5, state: STATE_LISTENING}      # 6=IPPROTO_TCP, 4=TCP_KEEPIDLE
    - {level: 6, name: 5, int_value: 5, state: STATE_LISTENING}      # 6=IPPROTO_TCP, 5=TCP_KEEPINTVL
    - {level: 6, name: 18, int_value: 30000, state: STATE_LISTENING} # 6=IPPROTO_TCP, 18=?
{%		endif %}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stream_idle_timeout: 0s
          codec_type: auto
          stat_prefix: ingress_http
{%		if listener.websocket | default(false) %}
          upgrade_configs:
          - upgrade_type: websocket
{%		endif %}
          route_config:
            name: local_route
            virtual_hosts:
{%		for vhost in listener.vhosts %}
            - name: {{vhost.name}}
              domains:
{%			for domain in (vhost.sub_domains | default([])) %}
              - '{{vhost.fqdn}}{{domain}}'
{%			endfor %}
{%			for domain in (vhost.full_domains | default([])) %}
              - '{{domain}}'
{%			endfor %}
              routes:
              - match:
                  prefix: '/'
                route:
                  cluster: cluster_{{vhost.cluster_name}}
                  prefix_rewrite: '/'
{%			if vhost.route.timeout is defined %}
                  timeout: {{ vhost.route.timeout }}
                  idle_timeout: {{ vhost.route.timeout }}
{%			endif %}
              cors:
{%			if vhost.cors.allow_credentials is defined %}
                allow_credentials: {{ vhost.cors.allow_credentials | bool | lower }}
{%			endif %}
                allow_origin_string_match:
                - {contains: "*"}
                allow_methods: {{DEFAULT_ALLOW_METHODS}}
{%			if envoy_extra_allow_headers is defined %}
                allow_headers: {{DEFAULT_ALLOW_HEADERS}},{{envoy_extra_allow_headers}}
{%			else %}
                allow_headers: {{DEFAULT_ALLOW_HEADERS}}
{%			endif %}
                max_age: '1728000'
                expose_headers: custom-header-1,grpc-status,grpc-message
                filter_enabled:
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                  runtime_key: cors.www.enabled
{%		endfor %}{# vhosts #}
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
{%		if listener.use_tls | default(false) %}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: {filename: "{{ envoy_tls_certchain }}"}
              private_key: {filename: "{{ envoy_tls_prikey }}"}
            validation_context:
              trusted_ca: {filename: "{{ envoy_tls_ca }}"}
{%		endif %}
{% endfor %}{# listeners #}
#
  clusters:
{% for cluster in envoy_clusters %}
  - name: cluster_{{cluster.name}}
    connect_timeout: 0.25s
    type: {{ cluster.dns | default('STRICT_DNS') }}
    lb_policy: {{ cluster.policy | default('ROUND_ROBIN') }}
    load_assignment:
      cluster_name: {{ cluster.name }}
      endpoints:
      - lb_endpoints:
{%		for upstream in cluster.upstreams %}
        - endpoint:
            address:
              socket_address:
                address: {{ upstream.name }}
                port_value: {{ upstream.port }}
{%		endfor %}
{%		if cluster.http2 | default(false) %}
    http2_protocol_options: {}
{%		endif %}
{#  upstream_connection_options: { tcp_keepalive: { keepalive_time: 1} } #}
{%		if cluster.circuit_breakers is defined %}
    circuit_breakers:
      thresholds:
{%			for cb in cluster.circuit_breakers %}
      - {priority: {{cb.name}}, max_connections: {{cb.mc}}, max_pending_requests: {{cb.mpr}}, max_requests: {{cb.mr}} }
{%			endfor %}
{%		endif %}
{% endfor %}{# clusters #}

# --------------------------------
...
