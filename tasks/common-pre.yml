---
# --------------------------------

- name: "Set up Envoy directories"
  ansible.builtin.file:
    group: root
    mode: "0755"
    owner: root
    path: "{{ envoy_etc_dir }}"
    state: directory
  become: true
  tags: ["ct-envoy"]

- name: "Set sysctl for max files"
  ansible.builtin.copy:
    dest: /etc/sysctl.d/50-org-maxfiles.conf
    group: root
    mode: "0644"
    owner: root
    src: sysctl-maxfiles.conf
  become: true
  tags: ["ct-envoy"]

- name: "Set limits.d max files"
  ansible.builtin.template:
    dest: /etc/security/limits.d/90-org-nofiles.conf
    group: root
    mode: "0644"
    owner: root
    src: limits-nofiles.conf.j2
  notify: Handler_Reload_Systemd
  become: true
  tags: ["ct-envoy"]

- name: "Generate file listing domains to manage with Certbot"
  ansible.builtin.template:
    dest: "{{ envoy_certbot_domain_file }}"
    group: root
    mode: "0644"
    owner: root
    src: envoy_certbot_domain_file.txt.j2
  when: envoy_certbot_domain_names is defined
  become: true
  tags: ["ct-envoy"]

- name: "Generate Lets Encrypt certificate"  # TODO replace with manage-letsencrypt.sh
  ansible.builtin.command: /usr/bin/letsencrypt certonly -n --standalone --agree-tos -m {{ envoy_email_addr }} -d {{ item.fqdn }}
  args:
    creates: /etc/letsencrypt/live/{{ item.fqdn }}/fullchain.pem
  loop: "{{ envoy_listeners }}"
  when: envoy_generate_certificate
  become: true
  tags: ["ct-envoy"]

- name: "Render Envoy config file"
  ansible.builtin.template:
    backup: true
    dest: "{{ envoy_etc_dir }}/envoy.yaml"  # must end with .yaml
    group: root
    mode: "0644"
    owner: root
    src: envoy_{{ envoy_proxy_style }}.yml.j2
  notify: Handler_Restart_Envoy
  become: true
  tags: ["ct-envoy"]

# --------------------------------
...
